{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","pattern","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","trim","test","htmlFor","type","classNames","event","target","onBlur","NewMovie","addMovie","count","setCount","formState","setFormState","state","newValue","onClick","newMovie","disabled","App","moviesFromServer","actualMovies","setActualMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f310642.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  pattern?: RegExp,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  pattern,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  let hasError = true;\n\n  if (pattern) {\n    hasError = touched && required && (!value.trim() || !pattern.test(value));\n  } else {\n    hasError = touched && required && !value.trim();\n  }\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\nexport const NewMovie = ({ addMovie }:{ addMovie: (movie: Movie) => void }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n\n  const [formState, setFormState] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  // eslint-disable-next-line\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n  /* eslint-enable */\n\n  const state = formState.title.trim()\n    && formState.imgUrl\n    && formState.imdbUrl\n    && formState.imdbId\n    && pattern.test(formState.imgUrl)\n    && pattern.test(formState.imdbUrl);\n\n  const refresh = () => {\n    const newMovie = {\n      title: formState.title,\n      description: formState.description,\n      imgUrl: formState.imgUrl,\n      imdbUrl: formState.imdbUrl,\n      imdbId: formState.imdbId,\n    };\n\n    addMovie(newMovie);\n\n    setFormState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setCount(count + 1);\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formState.title}\n        onChange={(newValue) => setFormState({\n          ...formState, title: newValue,\n        })}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formState.description}\n        onChange={(newValue) => setFormState({\n          ...formState, description: newValue,\n        })}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formState.imgUrl}\n        onChange={(newValue) => setFormState({\n          ...formState, imgUrl: newValue,\n        })}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formState.imdbUrl}\n        onChange={(newValue) => setFormState({\n          ...formState, imdbUrl: newValue,\n        })}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formState.imdbId}\n        onChange={(newValue) => setFormState({\n          ...formState, imdbId: newValue,\n        })}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={refresh}\n            disabled={!state}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [actualMovies, setActualMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setActualMovies([...actualMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={actualMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}